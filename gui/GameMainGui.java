/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mapleworld.game.tapgame.gui;

import com.mapleworld.game.tapgame.main.TapGame;

import java.awt.*;
import javax.swing.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;

import com.alee.laf.WebLookAndFeel;
import com.mapleworld.game.tapgame.timer.MainTimer;
import com.mapleworld.game.tapgame.tools.SQLiteJDBCUtils;

/**
 *
 * @author Administrator
 */
public class GameMainGui extends javax.swing.JFrame {
static GameMainGui gameMainGui;

static JPanel jpMain = new JPanel();
static JPanel sidePanel2P = new JPanel();
private static int mod1 = 0;
private static int mod2 = 0;
private SQLiteJDBCUtils.PlayerData playerData;
    /**
     * Creates new form GameMainGui
     */
    public GameMainGui() {
        initComponents();
        btDrop.requestFocus();
        //this.requestFocus();
        btDrop.addKeyListener(new KeyListener());
        //getGameMainGui();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePanel = new javax.swing.JPanel();
        btDrop = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lbScore = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbLife = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        playerName = new javax.swing.JLabel();
        jpMain = new javax.swing.JPanel();
        sidePanel2P = new javax.swing.JPanel();
        createRom = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbScore2p = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbLife2p = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        playerName2p = new javax.swing.JLabel();
        statusPanel = new javax.swing.JPanel();
        pause = new javax.swing.JToggleButton();
        exit = new javax.swing.JButton();
        mpMod = new javax.swing.JLabel();
        gameMod = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel9 = new javax.swing.JLabel();
        upTime = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        finshCount = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbAvgSpeed = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        currentWord = new javax.swing.JLabel();
        chineseMean = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btDrop.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        btDrop.setText("下落一个");
        btDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDropActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel1.setText("Score");

        lbScore.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        lbScore.setText("0");

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel3.setText("Life");

        lbLife.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        lbLife.setText("0");

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel5.setText("1P");

        playerName.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        playerName.setText("$PlayerName");

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addComponent(playerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbScore, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbLife, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(sidePanelLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(btDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(81, Short.MAX_VALUE)))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbLife))
            .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(sidePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(139, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jpMainLayout = new javax.swing.GroupLayout(jpMain);
        jpMain.setLayout(jpMainLayout);
        jpMainLayout.setHorizontalGroup(
            jpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 443, Short.MAX_VALUE)
        );
        jpMainLayout.setVerticalGroup(
            jpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        createRom.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 10)); // NOI18N
        createRom.setText("创建房间");
        createRom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRomActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 10)); // NOI18N
        jLabel2.setText("Score");

        lbScore2p.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 10)); // NOI18N
        lbScore2p.setText("0");

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 10)); // NOI18N
        jLabel4.setText("Life");

        lbLife2p.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 10)); // NOI18N
        lbLife2p.setText("0");

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 10)); // NOI18N
        jLabel8.setText("2P");

        playerName2p.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 10)); // NOI18N
        playerName2p.setText("$PlayerName2P");

        javax.swing.GroupLayout sidePanel2PLayout = new javax.swing.GroupLayout(sidePanel2P);
        sidePanel2P.setLayout(sidePanel2PLayout);
        sidePanel2PLayout.setHorizontalGroup(
            sidePanel2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanel2PLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanel2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerName2p, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sidePanel2PLayout.createSequentialGroup()
                        .addGroup(sidePanel2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbLife2p, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbScore2p, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createRom))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sidePanel2PLayout.setVerticalGroup(
            sidePanel2PLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanel2PLayout.createSequentialGroup()
                .addComponent(createRom)
                .addGap(9, 9, 9)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerName2p)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbScore2p)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbLife2p))
        );

        pause.setText("PAUSE");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        mpMod.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        mpMod.setText("$MpMod");
        mpMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mpModMouseClicked(evt);
            }
        });

        gameMod.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        gameMod.setText("$GameMod");

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mpMod, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pause, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(gameMod))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mpMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pause)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exit)
                .addContainerGap())
        );

        jToolBar1.setRollover(true);

        jLabel9.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel9.setText("游戏时间：");
        jToolBar1.add(jLabel9);

        upTime.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        upTime.setText("$UpTime");
        jToolBar1.add(upTime);

        jLabel11.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel11.setText("分钟");
        jToolBar1.add(jLabel11);

        jLabel12.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel12.setText("|");
        jToolBar1.add(jLabel12);

        jLabel13.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel13.setText("消除：");
        jToolBar1.add(jLabel13);

        finshCount.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        finshCount.setText("$FinshCount");
        jToolBar1.add(finshCount);

        jLabel15.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel15.setText("词");
        jToolBar1.add(jLabel15);

        jLabel16.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel16.setText("|");
        jToolBar1.add(jLabel16);

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel6.setText("速度：");
        jToolBar1.add(jLabel6);

        lbAvgSpeed.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        lbAvgSpeed.setText("$AvgSpeed");
        jToolBar1.add(lbAvgSpeed);

        jLabel10.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel10.setText("字/分");
        jToolBar1.add(jLabel10);

        jLabel14.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel14.setText("|");
        jToolBar1.add(jLabel14);

        jLabel17.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        jLabel17.setText("当前词汇：");
        jToolBar1.add(jLabel17);

        currentWord.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        currentWord.setText("$CurrentWord");
        jToolBar1.add(currentWord);

        chineseMean.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10)); // NOI18N
        chineseMean.setText("$Chinese");
        jToolBar1.add(chineseMean);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sidePanel2P, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(sidePanel2P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void btDropActionPerformed(java.awt.event.ActionEvent evt) {                                       

        //TapGame.dropOneWord(null,955);
    }                                      

    private void createRomActionPerformed(java.awt.event.ActionEvent evt) {                                       

        TapGame.dropOneWord(createNewWord(TapGame.getWordRandom()),955);
    }                                      

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDropActionPerformed
        TapGame.pause(pause.isSelected());
        //TapGame.dropOneWord(createNewWord(TapGame.getWordRandom()),jpMain);
    }//GEN-LAST:event_btDropActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        //TapGame.gameOver();
        //TapGame.setLife(0);
        TapGame.gameOver();

    }//GEN-LAST:event_exitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        //TapGame.setLife(0);
        TapGame.gameOver();

    }//GEN-LAST:event_formWindowClosing

    private void mpModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mpModMouseClicked
        TapGame.setLife(999);
        UI_setLife(999);
    }//GEN-LAST:event_mpModMouseClicked

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        pause.setSelected(true);
    }//GEN-LAST:event_formFocusLost

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        pause.setSelected(true);
        TapGame.pause(pause.isSelected());
    }//GEN-LAST:event_formWindowLostFocus



    public static void main() {
        WebLookAndFeel.install ();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*try {

                    javax.swing.UIManager.setLookAndFeel(WebLookAndFeel.class.getCanonicalName ());

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameMainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        gameMainGui = new GameMainGui();
        if(mod1 == 0){
            sidePanel2P.setVisible(false);
        }
        gameMainGui.setVisible(true);

        //java.awt.EventQueue.invokeLater(new Runnable() {
        //    public void run() {



         //   }
       // });

    }

    public static JPanel createNewWord(String word){
        System.out.println("掉落字母:"+word);
        JPanel jpWord = new JPanel();
        jpWord.setName(word);
        char [] wordChr = word.toCharArray();
        for(char letter : wordChr){
            String letterS = String.valueOf(letter);
            JLabel lbLetter = new JLabel(letterS);
            lbLetter.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 10));
            jpWord.add(lbLetter);
        }
        int x = (int)(Math.random() * 99) + 1;
        jpWord.setBounds(x, 0, 200, 200);
        //jpWord.setLocation(x,0);
        //jpWord.setPreferredSize(new Dimension(90, 90));
        jpWord.setOpaque(false);
        //jpWord.setBounds();
        //ContentPane cp = new ContentPane();
        //jpWord.repaint();
        jpMain.add(jpWord);
        //jpMain.repaint();
        gameMainGui.setVisible(true);
        return jpWord;
    }


    /*public void repaintJPMain() {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                jpMain.repaint();
            }
        });
        //synchronized (this){

       // }
        //this.lo

    }*/



    public void UI_setScore(int score){
        lbScore.setText(String.valueOf(score));
    }

   /* public void UI_setScoreTip(int tip){
        Thread td = new Thread(new Runnable() {
            @Override
            public void run() {
                SwingUtilities.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        lbScoreTip.setText("+" + tip);
                        try {
                            Thread.sleep(3000);
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                        lbScoreTip.setText("");
                    }
                });
            }
        });
    }*/
    public void UI_setPlayerName(String name){
        playerName.setText(String.valueOf(name));
    }

    public void UI_setFinshCount(int count){
        finshCount.setText(String.valueOf(count));
    }
    public void UI_setMod(int mod1,int mod2,int diff){
        if(mod1 == 0){
            if(mod2 == 0){
                mpMod.setText("单人模式");
                gameMod.setText("无尽模式");
            }else if(mod2 == 1) {
                mpMod.setText("闯关模式");
            }

        }else if(mod1 == 1){
            if(mod2 == 0){
                mpMod.setText("抢单词");
            }else if(mod2 == 1) {
                mpMod.setText("对抗");
            }
        }
    }

    public void UI_setCurrentWord(String word){
        currentWord.setText(String.valueOf(word));
    }

    public void UI_setCurrentWordChinese(String word){
        chineseMean.setText(String.valueOf(word));
    }

    public String UI_getCurrentWordChinese(){
        return chineseMean.getText();
    }

    public void UI_setLife(int life){
        lbLife.setText(String.valueOf(life));
    }

    public void UI_setAvgSpeed(double avgSpeed){
        DecimalFormat df = new DecimalFormat("0.00");
        lbAvgSpeed.setText(df.format(avgSpeed));
    }

    public static JPanel getJPMain(){
        return jpMain;
    }

    public static GameMainGui getGameMainGui(){
        return gameMainGui;
    }



    public void setMod(int mod1,int mod2){
        this.mod1 = mod1;
        this.mod2 = mod2;
    }

    public void setUpTime(int min,int sec){
        if(min == 0){
            jLabel11.setText("秒");
            upTime.setText(String.valueOf(sec));
        }else{
            jLabel11.setText("分");
            upTime.setText(String.valueOf(min));
        }

    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDrop;
    private javax.swing.JLabel chineseMean;
    private javax.swing.JButton createRom;
    private javax.swing.JLabel currentWord;
    private javax.swing.JButton exit;
    private javax.swing.JLabel finshCount;
    private javax.swing.JLabel gameMod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JToolBar jToolBar1;
    //private javax.swing.JPanel jpMain;
    private javax.swing.JLabel lbAvgSpeed;
    private javax.swing.JLabel lbLife;
    private javax.swing.JLabel lbLife2p;
    private javax.swing.JLabel lbScore;
    private javax.swing.JLabel lbScore2p;
    private javax.swing.JLabel mpMod;
    private javax.swing.JToggleButton pause;
    private javax.swing.JLabel playerName;
    private javax.swing.JLabel playerName2p;
    private javax.swing.JPanel sidePanel;
    //private javax.swing.JPanel sidePanel2P;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel upTime;
    // End of variables declaration//GEN-END:variables
}
class KeyListener extends KeyAdapter{
    public void keyPressed(KeyEvent e){
        if(TapGame.isPause()){
            return;
        }

        char letter=e.getKeyChar();
        char letterB = e.getKeyChar();
        if(TapGame.getCapitalization() == 0){
            if((int)letter >=65 && (int)letter <=90){
                letterB += 32;

            }
            if((int)letter >=97 && (int)letter <=122){
                letterB -= 32;

            }
        }
        //lbScore.setText(String.valueOf(letter));
        for(Component wordJPComponent: GameMainGui.getJPMain().getComponents()){
            JPanel wordJP = (JPanel)  wordJPComponent;
            for(int c = 0;c < wordJP.getComponents().length; c++){

            //for(Component letterComponent:wordJP.getComponents()) {
                JLabel letterLBL;
                Component letterComponentC = wordJP.getComponents()[c];
                if(c > 0){
                    Component letterComponentL = wordJP.getComponents()[c-1];
                    letterLBL = (JLabel) letterComponentL;
                }else{
                    letterLBL = (JLabel) letterComponentC;
                }

                JLabel letterLBC = (JLabel) letterComponentC;

                if (letterLBC.getText().contains(String.valueOf(letter)) || letterLBC.getText().contains(String.valueOf(letterB))) {
                    if(letterLBL.getForeground() == Color.RED && letterLBC.getForeground() != Color.RED){
                        MainTimer.typeKey();
                        letterLBC.setForeground(Color.RED);
                        TapGame.setCurrentWord(wordJP.getName());
                        break;
                    }else if(c == 0 && letterLBC.getForeground() != Color.RED){
                        MainTimer.typeKey();
                        letterLBC.setForeground(Color.RED);
                        TapGame.setCurrentWord(wordJP.getName());
                        break;
                    }

                    //break;
                }
            }

        }
    }
}


